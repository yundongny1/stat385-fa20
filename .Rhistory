sum(domestic$qsec < mean)
domestic =mtcars2[which(mtcars2$domestic == "yes"),]
set.seed(385); X <- rnorm(9)
n = length(X)
median = X[(n+1)/2]
median
set.seed(385); X <- rnorm(10)
SDM = (X - X[10])^2
SDM
x=1111
num = x%%(1:x)
num[num==0]
isprime = function(y) {
checkprime = (y%%(1:y))
check = checkprime[checkprime ==0]
if((length(check)==2) & y !=0) {
paste (y, "is a prime")
}
else {
paste (y, "is not a prime")
}
}
isprime(1111)
qtime = mtcars$qsec
qtime
mean = mean(qtime)
mean
sum(qtime < mean)
automatic =mtcars[which(mtcars$am == 0),]
sum(automatic$qsec < mean)
mtcars$mpg
mtcars$hp
goodfuel = mtcars[which((mtcars$mpg > 19.0) & (mtcars$hp >150)), ]
goodfuel
mtcars2 = mtcars
mtcars2[2,"domestic"] = "no"
mtcars2[3,"domestic"] = "no"
mtcars2[8, "domestic"] = "no"
mtcars2[9, "domestic"] = "no"
mtcars2[10, "domestic"] = "no"
mtcars2[11, "domestic"] = "no"
mtcars2[12, "domestic"] = "no"
mtcars2[13, "domestic"] = "no"
mtcars2[14, "domestic"] = "no"
mtcars2[18, "domestic"] = "no"
mtcars2[19, "domestic"] = "no"
mtcars2[20, "domestic"] = "no"
mtcars2[21, "domestic"] = "no"
mtcars2[26, "domestic"] = "no"
mtcars2[27, "domestic"] = "no"
mtcars2[28, "domestic"] = "no"
mtcars2[30, "domestic"] = "no"
mtcars2[31, "domestic"] = "no"
mtcars2[32, "domestic"] = "no"
head(mtcars2,5)
domestic =mtcars2[which(mtcars2$domestic == "yes"),]
domestic
sum(domestic$qsec < mean)
names(mtcars)[9] <- "transmission"
mtcars[9]
for(i in 1:nrow(mtcars)) {
if(mtcars[i, 9] == 1) {
mtcars[i, 9] = "manual"
} else {
mtcars[i, 9] = "automatic"
}
}
mtcars
mtcars4 = mtcars
mtcars4
mtcars4[9]= ifelse(mtcars$am == 1,"manual", "automatic")
names(mtcars4)[9] <- "transmission"
mtcars4
mtcars.list = as.list(mtcars)
mtcars.list
row.names(mtcars)
help(sub)
car_name = sub(" .*", "", row.names(mtcars))
length(car_name)
car_name
domestic =mtcars2[which(mtcars2$domestic == "yes"),]
domestic
mtcars2["domestic"] = "yes"
mtcars2 = mtcars
mtcars2["domestic"] = "yes"
mtcars2[2,"domestic"] = "no"
mtcars2[3,"domestic"] = "no"
mtcars2[8, "domestic"] = "no"
mtcars2[9, "domestic"] = "no"
mtcars2[10, "domestic"] = "no"
mtcars2[11, "domestic"] = "no"
mtcars2[12, "domestic"] = "no"
mtcars2[13, "domestic"] = "no"
mtcars2[14, "domestic"] = "no"
mtcars2[18, "domestic"] = "no"
mtcars2[19, "domestic"] = "no"
mtcars2[20, "domestic"] = "no"
mtcars2[21, "domestic"] = "no"
mtcars2[26, "domestic"] = "no"
mtcars2[27, "domestic"] = "no"
mtcars2[28, "domestic"] = "no"
mtcars2[30, "domestic"] = "no"
mtcars2[31, "domestic"] = "no"
mtcars2[32, "domestic"] = "no"
head(mtcars2,5)
domestic=mtcars2[which(mtcars2$domestic == "yes"),]
domestic
sum(domestic$qsec < mean)
domestic
mtcars[1]
mtcars2[1,"domestic"] = "no"
head(mtcars2,5)
domestic=mtcars2[which(mtcars2$domestic == "yes"),]
domestic
sum(domestic$qsec < mean)
set.seed(385); X <- rnorm(9)
n = length(X)
median = X[(n+1)/2]
median
set.seed(385); X <- rnorm(10)
SDM = (X - X[10])^2
SDM
x=1111
num = x%%(1:x)
num[num==0]
isprime = function(y) {
checkprime = (y%%(1:y))
check = checkprime[checkprime ==0]
if((length(check)==2) & y !=0) {
paste (y, "is a prime")
}
else {
paste (y, "is not a prime")
}
}
isprime(1111)
qtime = mtcars$qsec
qtime
mean = mean(qtime)
mean
sum(qtime < mean)
automatic =mtcars[which(mtcars$am == 0),]
sum(automatic$qsec < mean)
mtcars$mpg
mtcars$hp
goodfuel = mtcars[which((mtcars$mpg > 19.0) & (mtcars$hp >150)), ]
goodfuel
mtcars2 = mtcars
mtcars2["domestic"] = "yes"
mtcars2[1,"domestic"] = "no"
mtcars2[2,"domestic"] = "no"
mtcars2[3,"domestic"] = "no"
mtcars2[8, "domestic"] = "no"
mtcars2[9, "domestic"] = "no"
mtcars2[10, "domestic"] = "no"
mtcars2[11, "domestic"] = "no"
mtcars2[12, "domestic"] = "no"
mtcars2[13, "domestic"] = "no"
mtcars2[14, "domestic"] = "no"
mtcars2[18, "domestic"] = "no"
mtcars2[19, "domestic"] = "no"
mtcars2[20, "domestic"] = "no"
mtcars2[21, "domestic"] = "no"
mtcars2[26, "domestic"] = "no"
mtcars2[27, "domestic"] = "no"
mtcars2[28, "domestic"] = "no"
mtcars2[30, "domestic"] = "no"
mtcars2[31, "domestic"] = "no"
mtcars2[32, "domestic"] = "no"
head(mtcars2,5)
domestic=mtcars2[which(mtcars2$domestic == "yes"),]
domestic
sum(domestic$qsec < mean)
names(mtcars)[9] <- "transmission"
mtcars[9]
for(i in 1:nrow(mtcars)) {
if(mtcars[i, 9] == 1) {
mtcars[i, 9] = "manual"
} else {
mtcars[i, 9] = "automatic"
}
}
mtcars
mtcars4 = mtcars
mtcars4
mtcars4[9]= ifelse(mtcars$am == 1,"manual", "automatic")
names(mtcars4)[9] <- "transmission"
mtcars4
mtcars.list = as.list(mtcars)
mtcars.list
row.names(mtcars)
help(sub)
car_name = sub(" .*", "", row.names(mtcars))
length(car_name)
car_name
mtcars2
mtcars$am
mtcars3$am
set.seed(385); X <- rnorm(9)
n = length(X)
median = X[(n+1)/2]
median
set.seed(385); X <- rnorm(10)
SDM = (X - X[10])^2
SDM
x=1111
num = x%%(1:x)
num[num==0]
isprime = function(y) {
checkprime = (y%%(1:y))
check = checkprime[checkprime ==0]
if((length(check)==2) & y !=0) {
paste (y, "is a prime")
}
else {
paste (y, "is not a prime")
}
}
isprime(1111)
qtime = mtcars$qsec
qtime
mean = mean(qtime)
mean
sum(qtime < mean)
automatic =mtcars[which(mtcars$am == 0),]
sum(automatic$qsec < mean)
mtcars$mpg
mtcars$hp
goodfuel = mtcars[which((mtcars$mpg > 19.0) & (mtcars$hp >150)), ]
goodfuel
mtcars2 = mtcars
mtcars2["domestic"] = "yes"
mtcars2[1,"domestic"] = "no"
mtcars2[2,"domestic"] = "no"
mtcars2[3,"domestic"] = "no"
mtcars2[8, "domestic"] = "no"
mtcars2[9, "domestic"] = "no"
mtcars2[10, "domestic"] = "no"
mtcars2[11, "domestic"] = "no"
mtcars2[12, "domestic"] = "no"
mtcars2[13, "domestic"] = "no"
mtcars2[14, "domestic"] = "no"
mtcars2[18, "domestic"] = "no"
mtcars2[19, "domestic"] = "no"
mtcars2[20, "domestic"] = "no"
mtcars2[21, "domestic"] = "no"
mtcars2[26, "domestic"] = "no"
mtcars2[27, "domestic"] = "no"
mtcars2[28, "domestic"] = "no"
mtcars2[30, "domestic"] = "no"
mtcars2[31, "domestic"] = "no"
mtcars2[32, "domestic"] = "no"
head(mtcars2,5)
domestic=mtcars2[which(mtcars2$domestic == "yes"),]
domestic
sum(domestic$qsec < mean)
names(mtcars2)[9] <- "transmission"
mtcars2[9]
for(i in 1:nrow(mtcars2)) {
if(mtcars2[i, 9] == 1) {
mtcars2[i, 9] = "manual"
} else {
mtcars2[i, 9] = "automatic"
}
}
mtcars2
mtcars4 = mtcars
mtcars4
mtcars4[9]= ifelse(mtcars$am == 1,"manual", "automatic")
names(mtcars4)[9] <- "transmission"
mtcars4
mtcars.list = as.list(mtcars)
mtcars.list
row.names(mtcars)
help(sub)
car_name = sub(" .*", "", row.names(mtcars))
length(car_name)
car_name
automatic =mtcars[which(mtcars$am == 0),]
sum(automatic$qsec < mean)
data(mtcars)
automatic =mtcars[which(mtcars$am == 0),]
sum(automatic$qsec < mean)
mtcars$mpg
mtcars$hp
goodfuel = mtcars[which((mtcars$mpg > 19.0) & (mtcars$hp >150)), ]
goodfuel
set.seed(385); X <- rnorm(9)
n = length(X)
median = X[(n+1)/2]
median
set.seed(385); X <- rnorm(10)
SDM = (X - X[10])^2
SDM
x=1111
num = x%%(1:x)
num[num==0]
isprime = function(y) {
checkprime = (y%%(1:y))
check = checkprime[checkprime ==0]
if((length(check)==2) & y !=0) {
paste (y, "is a prime")
}
else {
paste (y, "is not a prime")
}
}
isprime(1111)
qtime = mtcars$qsec
qtime
mean = mean(qtime)
mean
sum(qtime < mean)
data(mtcars)
automatic =mtcars[which(mtcars$am == 0),]
sum(automatic$qsec < mean)
mtcars$mpg
mtcars$hp
goodfuel = mtcars[which((mtcars$mpg > 19.0) & (mtcars$hp >150)), ]
goodfuel
mtcars2 = mtcars
mtcars2["domestic"] = "yes"
mtcars2[1,"domestic"] = "no"
mtcars2[2,"domestic"] = "no"
mtcars2[3,"domestic"] = "no"
mtcars2[8, "domestic"] = "no"
mtcars2[9, "domestic"] = "no"
mtcars2[10, "domestic"] = "no"
mtcars2[11, "domestic"] = "no"
mtcars2[12, "domestic"] = "no"
mtcars2[13, "domestic"] = "no"
mtcars2[14, "domestic"] = "no"
mtcars2[18, "domestic"] = "no"
mtcars2[19, "domestic"] = "no"
mtcars2[20, "domestic"] = "no"
mtcars2[21, "domestic"] = "no"
mtcars2[26, "domestic"] = "no"
mtcars2[27, "domestic"] = "no"
mtcars2[28, "domestic"] = "no"
mtcars2[30, "domestic"] = "no"
mtcars2[31, "domestic"] = "no"
mtcars2[32, "domestic"] = "no"
head(mtcars2,5)
domestic=mtcars2[which(mtcars2$domestic == "yes"),]
domestic
sum(domestic$qsec < mean)
names(mtcars2)[9] <- "transmission"
mtcars2[9]
for(i in 1:nrow(mtcars2)) {
if(mtcars2[i, 9] == 1) {
mtcars2[i, 9] = "manual"
} else {
mtcars2[i, 9] = "automatic"
}
}
mtcars2
mtcars4 = mtcars
mtcars4
mtcars4[9]= ifelse(mtcars$am == 1,"manual", "automatic")
names(mtcars4)[9] <- "transmission"
mtcars4
mtcars.list = as.list(mtcars)
mtcars.list
row.names(mtcars)
help(sub)
car_name = sub(" .*", "", row.names(mtcars))
length(car_name)
car_name
knitr::opts_chunk$set(echo = TRUE)
for(i in 1:length(state)){
maxvotes <- max(election[election$state==state[i],"candidatevotes"])
election2 <- rbind(election2,election[election$candidatevotes==maxvotes, ])
}
for(i in 1:length(election$state)){
maxvotes <- max(election[election$state==state[i],"candidatevotes"])
election2 <- rbind(election2,election[election$candidatevotes==maxvotes, ])
}
knitr::opts_chunk$set(echo = TRUE)
covid = read.csv("https://uofi.box.com/shared/static/urzam55r2uyrzxwz34gf3i2jujviqbma.csv")
election = read.csv("https://uofi.box.com/shared/static/rsvhhskt1eb2q18od1wjscgs6646g93t.csv")
str(covid)
election$quasi_pop <- election$totalvotes
names(election)
election <- election[,-c(1,12,13)]
head(election,10)
##covid2 the most recent covid data
covid2 <- covid[covid$date=="2020-10-01",]
covid2
election2 = NULL
for(i in 1:length(election$state)){
maxvotes <- max(election[election$state==state[i],"candidatevotes"])
election2 <- rbind(election2,election[election$candidatevotes==maxvotes, ])
}
for(i in 1:length(election$state)){
maxvotes <- max(election[election$state==state[i],"candidatevotes"])
election2 <- rbind(election2,election[election$candidatevotes==maxvotes, ])
}
for(i in 1:length(state)){
maxvotes <- max(election[election$state==state[i],"candidatevotes"])
election2 <- rbind(election2,election[election$candidatevotes==maxvotes, ])
}
for(i in 1:length(states)){
maxvotes <- max(election[election$state==state[i],"candidatevotes"])
election2 <- rbind(election2,election[election$candidatevotes==maxvotes, ])
}
for(i in 1:length(election$state)){
maxvotes <- max(election[election$state==[i],"candidatevotes"])
##covid2 the most recent covid data
covid2 <- covid[covid$date=="2020-10-01",]
covid2
states = unique(election$state)
election2 = NULL
for(i in 1:length(states)){
maxvotes = max(election[election$state==states[i],"candidatevotes"])
election2 = rbind(election2,election[election$candidatevotes==maxvotes, ])
}
combined = merge(covid2, election2, by = "state")
head(combined, 10)
combined <- merge(covid2, election2, by="state")
head(combined, 10)
knitr::opts_chunk$set(echo = TRUE)
covid = read.csv("https://uofi.box.com/shared/static/urzam55r2uyrzxwz34gf3i2jujviqbma.csv")
election = read.csv("https://uofi.box.com/shared/static/rsvhhskt1eb2q18od1wjscgs6646g93t.csv")
str(covid)
election$quasi_pop <- election$totalvotes
names(election)
election <- election[,-c(1,12,13)]
head(election,10)
##covid2 the most recent covid data
covid2 <- covid[covid$date=="2020-10-01",]
covid2
states = unique(election$state)
election2 = NULL
for(i in 1:length(states)){
maxvotes = max(election[election$state==states[i],"candidatevotes"])
election2 = rbind(election2,election[election$candidatevotes==maxvotes, ])
}
combined = merge(covid2, election2, by = "state")
head(combined, 10)
combined <- merge(covid2, election2, by="state")
head(combined, 10)
names(combined)
combined[order(combined$cases, decreasing = TRUE),][c(1,12,4)]
combined$caserates = (combined$cases)/(combined$quasi_pop)
combined[order(combined$caserates, decreasing = TRUE),][c(1,12,17)]
library(tidyverse)
crime = read_delim("C:/Users/Justin/Desktop/jail.txt", delim="|t")
crime
crime$booking_date <- as.Date(crime$booking_date, "%m/%d/%Y")
crime$released_date <- as.Date(crime$released_date, "%m/%d/%Y")
crime
crime$jail_start = as.POSIXct(paste(crime$booking_date, crime$booking_time), format = "%Y-%m-%d %H:%M:%S")
crime$jail_end = as.POSIXct(paste(crime$released_date, crime$released_time), format = "%Y-%m-%d %H:%M:%S")
crime
df = data.frame(crime)
df
help(difftime)
df["time_spent_in_jail"] = difftime(df$jail_end,df$jail_start,units= 'hours')
df2 = arrange(df,desc(time_spent_in_jail))
head(df2[38:41], 10)
knitr::opts_chunk$set(echo = TRUE)
covid = read.csv("https://uofi.box.com/shared/static/urzam55r2uyrzxwz34gf3i2jujviqbma.csv")
election = read.csv("https://uofi.box.com/shared/static/rsvhhskt1eb2q18od1wjscgs6646g93t.csv")
str(covid)
election$quasi_pop <- election$totalvotes
names(election)
election <- election[,-c(1,12,13)]
head(election,10)
##covid2 the most recent covid data
covid2 <- covid[covid$date=="2020-10-01",]
covid2
states = unique(election$state)
election2 = NULL
for(i in 1:length(states)){
maxvotes = max(election[election$state==states[i],"candidatevotes"])
election2 = rbind(election2,election[election$candidatevotes==maxvotes, ])
}
combined = merge(covid2, election2, by = "state")
head(combined, 10)
combined <- merge(covid2, election2, by="state")
head(combined, 10)
names(combined)
combined[order(combined$cases, decreasing = TRUE),][c(1,12,4)]
combined$caserates = (combined$cases)/(combined$quasi_pop)
combined[order(combined$caserates, decreasing = TRUE),][c(1,12,17)]
library(tidyverse)
crime = read_delim("C:/Users/Justin/Desktop/jail.txt", delim="|t")
crime
crime$booking_date <- as.Date(crime$booking_date, "%m/%d/%Y")
crime$released_date <- as.Date(crime$released_date, "%m/%d/%Y")
crime
crime$jail_start = as.POSIXct(paste(crime$booking_date, crime$booking_time), format = "%Y-%m-%d %H:%M:%S")
crime$jail_end = as.POSIXct(paste(crime$released_date, crime$released_time), format = "%Y-%m-%d %H:%M:%S")
crime
df = data.frame(crime)
df
help(difftime)
df["time_spent_in_jail"] = difftime(df$jail_end,df$jail_start,units= 'hours')
df2 = arrange(df,desc(time_spent_in_jail))
head(df2[38:41], 10)
